// <auto-generated />
using System;
using System.Collections.Generic;
using EFCoreCodeFirstSample.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RulesEngine.Models;

#nullable disable

namespace EFCoreCodeFirstSample.Migrations.LicenseMigration
{
    [DbContext(typeof(LicenseContext))]
    [Migration("20231130062006_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.License", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountId")
                        .HasColumnType("text");

                    b.Property<string>("AccountName")
                        .HasColumnType("text");

                    b.Property<Dictionary<string, object>>("Attributes")
                        .HasColumnType("jsonb");

                    b.Property<bool>("InForce")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LicenseExpiryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LicenseName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LicenseStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LicenseType")
                        .HasColumnType("text");

                    b.Property<string>("OrganizationFriendlyId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.LicenseRuleV2", b =>
                {
                    b.Property<string>("LicenseWorkFlow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<RootLicenseWorkFlow>("LicenseWorkFlowContent")
                        .HasColumnType("jsonb");

                    b.HasKey("LicenseWorkFlow");

                    b.ToTable("LicenseRules");
                });

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.ProductRule", b =>
                {
                    b.Property<string>("ProductWorkFlow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<IEnumerable<ScopedParam>>("GlobalParams")
                        .HasColumnType("jsonb");

                    b.Property<IEnumerable<Rule>>("Rules")
                        .HasColumnType("jsonb");

                    b.HasKey("ProductWorkFlow");

                    b.ToTable("ProductRules");
                });
#pragma warning restore 612, 618
        }
    }
}
